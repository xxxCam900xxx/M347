#cloud-config
# source: https://gist.github.com/syntaqx/9dd3ff11fb3d48b032c84f3e31af9163
users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    home: /home/ubuntu
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUBo+qnNu5xxM9vfz4C04M36FHxHNrEMdm5TkFj1/SfVtqunlUOeMpu7nFCZZKnX8HYwf/MkjcBiTYAgncxku8grwl6XuW/pcvmb6/ghSIaw4xtRRSzit7omqJ5d8kXB3+Nd1aaMHsjfly4nkaqswhySVXQqr8Hw6DbWVw8jLLVKEE+5NZHY33hJkhJwK4blCllsGpmQaKi1qxjsN0hZOWNK01iJAydwD8t2xJ0NOYbq8Qas5IyPnRN7SPxvEhIP6WLQ6Ym6Dmf8FwNW1cHLTKabgjzt5f/HKUkKS89dPd3fn4nnFli1BOMECGUIvVlOw2pQNri7+04OOfn2FGlqr5 aws-key # teacher
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCSqpEZqiPDet55JlL3ZvpkN+Ag5rKoV6xBdWqMhNI/CfVYNGYAGCGSqPZWls8jF5ctGKQ9Hj/5PHhriMMSGwpmAJRvkySq1CHdKjQOHGkwC/ntGv30ssu9GOQlJedyk8FBOeI6VvDSLLPkW8FvQqTP1IatiiXhT39YgMgAyF9Cuc0iqTE2pjJkL8i3/97ZG6nSeS7NwANEgNLAmmeqUOV5JgK6xnSA2rBQ0R6U94pGbokBDRc/45yIf4zphAnceTi3tCnM3FMkRsi/a4dec5dfeOS2AJq2e5eZ1m1uSrtZctgxbIEMzDdaNQM5plL2QgAWWc4RE32Klxk2emBaPEsJ aws-key # jan
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCoNJnd3k8lkPVz7Ay95fOqN7R6+JBICvPPPHhlHYrgUsVvxpsYj5+FQZ+co63jts6/69FpZvmIQRB7cZXUyhyGJd4yptKAEbLosECl6nGslMypXeh5rex/VSmL89r3C7tL0aKWoAvCSBckrSiRjIRCPSYED8EPhIZMs1Ie5eMKgs+d19WtflTlkr6wzBW7gdxcKSL25JmByCrLJyBMcFnF0P/gcIZ74jdwyCdSFRB97u4GnofuM6KAdOAp5QuMLcu2VbbiRkZaRRps/dfIeLXWQHIvWsQNhol3AkH17ybcdEucJu+Gl5AMra/S43kqgPnepmAmTdipkUGeamIApI9b aws-key # cameron
disable_root: false
package_update: true
package_upgrade: true
groups:
  - docker
system_info:
  default_user:
    groups: [docker]
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - unattended-upgrades
final_message: "The system is finally up, after $UPTIME seconds"
write_files:
  - path: /home/ubuntu/src/db.php
    permissions: "0644"
    content: |
      <?php
        $servername = getenv('DB_HOST');
        $username = getenv('DB_USER');
        $password = getenv('DB_PASSWORD');
        $dbname = getenv('DB_NAME');

        // Create connection
        $conn = new mysqli($servername, $username, $password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        $sql = "SELECT Host, User FROM mysql.user;";
        $result = $conn->query($sql);

        while ($row = $result->fetch_assoc()) {
            echo ($row["Host"] . " / " . $row["User"] . "<br />");
        }

        $conn->close();
      ?>
  - path: /home/ubuntu/src/info.php
    permissions: "0644"
    content: |
      <?php
        phpinfo();
      ?>
  - path: /home/ubuntu/dockerfile
    permissions: "0644"
    content: |
      FROM php:8.0-apache
      WORKDIR /var/www/html/
      COPY src .
      EXPOSE 80
      RUN ["docker-php-ext-install", "mysqli"]
  - path: /home/ubuntu/docker-compose.yml
    permissions: "0644"
    content: |
      version: '3.8'
      name: kn04b-compose
      services:
        database:
          image: mariadb:latest
          container_name: m347-kn04b-db
          ports:
            - "3306:3306"
          environment:
            - MARIADB_ROOT_PASSWORD=123
          networks:
            - kn04b-network
        web:
          build: .
          container_name: m347-kn04b-web
          ports:
            - "80:80"
          depends_on:
            - database
          networks:
            - kn04b-network
      networks:
        kn04b-network:
          driver: bridge
          ipam:
            config:
              - subnet: 172.10.0.0/16
                ip_range: 172.10.5.0/24
                gateway: 172.10.5.254
runcmd:
  - mkdir -p /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker
  - cd /home/ubuntu
  - sudo docker compose up -d#cloud-config